read.csv("./raw_data/BHS_Unit3.txt", header = FALSE, sep = ";"))
txt3_df <- as.data.frame(txt3)
txt3_df$Unit <- "3"
txt4 <- t(
read.csv("./raw_data/BHS_Unit4.txt", header = FALSE, sep = ";"))
txt4_df <- as.data.frame(txt4)
txt4_df$Unit <- "4"
txt5 <- t(
read.csv("./raw_data/BHS_Unit5.txt", header = FALSE, sep = ";"))
txt5_df <- as.data.frame(txt5)
txt5_df$Unit <- "5"
txt6 <- t(
read.csv("./raw_data/BHS_Unit6.txt", header = FALSE, sep = ";"))
txt6_df <- as.data.frame(txt6)
txt6_df$Unit <- "6"
txt7 <- t(
read.csv("./raw_data/BHS_Unit7.txt", header = FALSE, sep = ";"))
txt7_df <- as.data.frame(txt7)
txt7_df$Unit <- "7"
txt8 <- t(
read.csv("./raw_data/BHS_Unit8.txt", header = FALSE, sep = ";"))
txt8_df <- as.data.frame(txt8)
txt8_df$Unit <- "8"
txt9 <- t(
read.csv("./raw_data/BHS_Unit9.txt", header = FALSE, sep = ";"))
txt9_df <- as.data.frame(txt9)
txt9_df$Unit <- "9"
txt10 <- t(
read.csv("./raw_data/BHS_Unit10.txt", header = FALSE, sep = ";"))
txt10_df <- as.data.frame(txt10)
txt10_df$Unit <- "10"
txt11 <- t(
read.csv("./raw_data/BHS_Unit11.txt", header = FALSE, sep = ";"))
txt11_df <- as.data.frame(txt11)
txt11_df$Unit <- "11"
txt1 <- t(
read.csv("./raw_data/BHS_Unit1.txt", header = FALSE, sep = ";"))
View(txt1)
View(txt1)
View(txt1)
View(txt1)
txt1 <- t(
read.csv("./raw_data/BHS_Unit1.txt", header = FALSE, sep = ";")) # transposed to long
txt1 <- as.data.frame(txt1) # convert to df
txt1$Unit <- "1" # add area unit
txt2 <- t(
read.csv("./raw_data/BHS_Unit2.txt", header = FALSE, sep = ";"))
txt2 <- as.data.frame(txt2)
txt2$Unit <- "2"
txt3 <- t(
read.csv("./raw_data/BHS_Unit3.txt", header = FALSE, sep = ";"))
txt3 <- as.data.frame(txt3)
txt3$Unit <- "3"
txt4 <- t(
read.csv("./raw_data/BHS_Unit4.txt", header = FALSE, sep = ";"))
txt4 <- as.data.frame(txt4)
txt4$Unit <- "4"
txt5 <- t(
read.csv("./raw_data/BHS_Unit5.txt", header = FALSE, sep = ";"))
txt5 <- as.data.frame(txt5)
txt5$Unit <- "5"
txt6 <- t(
read.csv("./raw_data/BHS_Unit6.txt", header = FALSE, sep = ";"))
txt6 <- as.data.frame(txt6)
txt6$Unit <- "6"
txt7 <- t(
read.csv("./raw_data/BHS_Unit7.txt", header = FALSE, sep = ";"))
txt7 <- as.data.frame(txt7)
txt7$Unit <- "7"
txt8 <- t(
read.csv("./raw_data/BHS_Unit8.txt", header = FALSE, sep = ";"))
txt8 <- as.data.frame(txt8)
txt8$Unit <- "8"
txt9 <- t(
read.csv("./raw_data/BHS_Unit9.txt", header = FALSE, sep = ";"))
txt9 <- as.data.frame(txt9)
txt9$Unit <- "9"
txt10 <- t(
read.csv("./raw_data/BHS_Unit10.txt", header = FALSE, sep = ";"))
txt10 <- as.data.frame(txt10)
txt10$Unit <- "10"
txt11 <- t(
read.csv("./raw_data/BHS_Unit11.txt", header = FALSE, sep = ";"))
txt11 <- as.data.frame(txt11)
txt11$Unit <- "11"
View(txt9)
View(txt11)
View(txt6)
View(txt11)
View(txt9)
View(txt11)
txt1 <- t(
read.csv("./raw_data/BHS_Unit1.txt", header = FALSE, sep = ";")) # transposed to long
txt1 <- as.data.frame(txt1) %>%
str_remove_all(.)
View(txt1)
txt1 <- t(
read.csv("./raw_data/BHS_Unit1.txt", header = FALSE, sep = ";")) # transposed to long
txt1 <- as.data.frame(txt1) %>%
str_remove_all(.," ")
txt1 <- t(
read.csv("./raw_data/BHS_Unit1.txt", header = FALSE, sep = ";")) # transposed to long
txt1 <- as.data.frame(txt1) %>%
str_remove_all(.,"")
txt1 <- t(
read.csv("./raw_data/BHS_Unit1.txt", header = FALSE, sep = ";")) # transposed to long
txt1 <- as.data.frame(txt1)
txt1 <- txt1 %>%
str_remove_all(.," ")
txt1 <- t(
read.csv("./raw_data/BHS_Unit1.txt", header = FALSE, sep = ";")) # transposed to long
txt1 <- as.data.frame(txt1)
txt1 <- txt1 %>%
str_remove_all(" ")
txt1 <- t(
read.csv("./raw_data/BHS_Unit1.txt", header = FALSE, sep = ";")) # transposed to long
txt1 <- as.data.frame(txt1) # convert to df
txt1$Unit <- "1" # add area unit
txt2 <- t(
read.csv("./raw_data/BHS_Unit2.txt", header = FALSE, sep = ";"))
txt2 <- as.data.frame(txt2)
txt2$Unit <- "2"
txt3 <- t(
read.csv("./raw_data/BHS_Unit3.txt", header = FALSE, sep = ";"))
txt3 <- as.data.frame(txt3)
txt3$Unit <- "3"
txt4 <- t(
read.csv("./raw_data/BHS_Unit4.txt", header = FALSE, sep = ";"))
txt4 <- as.data.frame(txt4)
txt4$Unit <- "4"
txt5 <- t(
read.csv("./raw_data/BHS_Unit5.txt", header = FALSE, sep = ";"))
txt5 <- as.data.frame(txt5)
txt5$Unit <- "5"
txt6 <- t(
read.csv("./raw_data/BHS_Unit6.txt", header = FALSE, sep = ";"))
txt6 <- as.data.frame(txt6)
txt6$Unit <- "6"
txt7 <- t(
read.csv("./raw_data/BHS_Unit7.txt", header = FALSE, sep = ";"))
txt7 <- as.data.frame(txt7)
txt7$Unit <- "7"
txt8 <- t(
read.csv("./raw_data/BHS_Unit8.txt", header = FALSE, sep = ";"))
txt8 <- as.data.frame(txt8)
txt8$Unit <- "8"
txt9 <- t(
read.csv("./raw_data/BHS_Unit9.txt", header = FALSE, sep = ";"))
txt9 <- as.data.frame(txt9)
txt9$Unit <- "9"
txt10 <- t(
read.csv("./raw_data/BHS_Unit10.txt", header = FALSE, sep = ";"))
txt10 <- as.data.frame(txt10)
txt10$Unit <- "10"
txt11 <- t(
read.csv("./raw_data/BHS_Unit11.txt", header = FALSE, sep = ";"))
txt11 <- as.data.frame(txt11)
txt11$Unit <- "11"
cord_df <- rbind(txt1_df, txt2_df) %>%
rbind(., txt3_df) %>%
rbind(., txt4_df) %>%
rbind(., txt5_df) %>%
rbind(., txt6_df) %>%
rbind(., txt7_df) %>%
rbind(., txt8_df) %>%
rbind(., txt9_df) %>%
rbind(., txt10_df) %>%
rbind(., txt11_df)
cord_df <- rbind(txt1, txt2) %>%
rbind(., txt3) %>%
rbind(., txt4) %>%
rbind(., txt5) %>%
rbind(., txt6) %>%
rbind(., txt7) %>%
rbind(., txt8) %>%
rbind(., txt9) %>%
rbind(., txt10) %>%
rbind(., txt11)
View(cord_df)
rownames(cord_df) <- NULL # delete row names
colnames(cord_df) <- c("Coordinates", "Unit") # add name columns
cord_df <- cord_df %>% na.omit # delete empty rows
cord_df
View(cord_df)
cord_df <- separate(cord_df, "Coordinates", c("lat", "lon"), ",")
# convert from factor to numeric
cord_df$lat <- as.numeric(cord_df$lat)
cord_df$lon <- as.numeric(cord_df$lon)
cord_df$Unit <- as.numeric(cord_df$Unit)
cord_df
# make a list
cord_list <- split(cord_df, cord_df$Unit)
# extract lon-lats in the list, not the names
cord_list <- lapply(cord_list, function(x) { x["Unit"] <- NULL; x })
# create SpatialPolygons Object, convert coords to polygon
ps <- lapply(cord_list, Polygon)
# add Unit variable
p1 <- lapply(seq_along(ps), function(i) Polygons(list(ps[[i]]),
ID = names(cord_list)[i]  ))
# create spatial polygons
bhs_sp <- SpatialPolygons(p1, proj4string = CRS("+proj=utm +zone=11 +ellps=GRS80 +datum=NAD83 +units=m +no_defs") )
# create spatial polygon df
bhs_spdf <- SpatialPolygonsDataFrame(bhs_sp,
data.frame(Unit = unique(cord_df$Unit),
row.names = unique(cord_df$Unit)))
# convert to shapefile
bhs_sf <- st_as_sf(bhs_spdf, crs = "+proj=utm +zone=11 +ellps=GRS80 +datum=NAD83 +units=m +no_defs ")
txt1A <- t(
read.csv("./raw_data/BHS_Unit1A.txt", header = FALSE, sep = ";")) # transposed to long
txt1A_df <- as.data.frame(txt1A) # create dataframe
txt1A_df$Unit <- "1" # add Unit variable
txt4A <- t(
read.csv("./raw_data/BHS_Unit4A.txt", header = FALSE, sep = ";"))
txt4A_df <- as.data.frame(txt4A)
txt4A_df$Unit <- "4A"
txt4B <- t(
read.csv("./raw_data/BHS_Unit4B.txt", header = FALSE, sep = ";"))
txt4B_df <- as.data.frame(txt4B)
txt4B_df$Unit <- "4B"
txt4C <- t(
read.csv("./raw_data/BHS_Unit4C.txt", header = FALSE, sep = ";"))
txt4C_df <- as.data.frame(txt4C)
txt4C_df$Unit <- "4C"
crmv_df <- rbind(txt1A_df, txt4A_df) %>%
rbind(txt4B_df) %>%
rbind(txt4C_df)
rownames(crmv_df) <- NULL # delete row names
colnames(crmv_df) <- c("Coordinates", "Unit") # name columns
crmv_df <- crmv_df %>% na.omit # delete empty rows
# separate coordinates into two columns
crmv_df <- separate(crmv_df, "Coordinates", c("lat", "lon"), ",")
# convert to numeric
crmv_df$lat <- as.numeric(crmv_df$lat)
crmv_df$lon <- as.numeric(crmv_df$lon)
# make a list
crmv_list <- split(crmv_df, crmv_df$Unit)
# extract lon-lats in the list, not the names
crmv_list <- lapply(crmv_list, function(x) { x["Unit"] <- NULL; x })
# create SpatialPolygons Object, convert coords to polygon
rm_ps <- lapply(crmv_list, Polygon)
# add Unit variable
rm_p1 <- lapply(seq_along(rm_ps), function(i) Polygons(list(rm_ps[[i]]),
ID = names(crmv_list)[i]  ))
# convert to spatial polygons
rmbhs_sp <- SpatialPolygons(rm_p1, proj4string = CRS("+proj=utm +zone=11 +ellps=GRS80 +datum=NAD83 +units=m +no_defs") )
# create spatial polygons dataframe
rmbhs_spdf <- SpatialPolygonsDataFrame(rmbhs_sp,
data.frame(Unit = unique(crmv_df$Unit),
row.names = unique(crmv_df$Unit)))
# convert to spatial file
rmbhs_sf <- st_as_sf(rmbhs_spdf, crs = "+proj=utm +zone=11 +ellps=GRS80 +datum=NAD83 +units=m +no_defs ")
# remove Unit 1 and 4 main polygons
bhs2_sf <- filter(bhs_sf, Unit != 1 & Unit != 4)
# add Units 1 and 4 with removed sections
bhsFinal_sf <- rbind(bhs2_sf, Unit1_comp) %>%
rbind(Unit4_comp)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(tidyverse)
library(stringr)
library(mapview)
library(sf)
library(sp)
library(rgeos)
txt1 <- t(
read.csv("./raw_data/BHS_Unit1.txt", header = FALSE, sep = ";")) # transposed to long
txt1 <- as.data.frame(txt1) # convert to df
txt1$Unit <- "1" # add area unit
txt2 <- t(
read.csv("./raw_data/BHS_Unit2.txt", header = FALSE, sep = ";"))
txt2 <- as.data.frame(txt2)
txt2$Unit <- "2"
txt3 <- t(
read.csv("./raw_data/BHS_Unit3.txt", header = FALSE, sep = ";"))
txt3 <- as.data.frame(txt3)
txt3$Unit <- "3"
txt4 <- t(
read.csv("./raw_data/BHS_Unit4.txt", header = FALSE, sep = ";"))
txt4 <- as.data.frame(txt4)
txt4$Unit <- "4"
txt5 <- t(
read.csv("./raw_data/BHS_Unit5.txt", header = FALSE, sep = ";"))
txt5 <- as.data.frame(txt5)
txt5$Unit <- "5"
txt6 <- t(
read.csv("./raw_data/BHS_Unit6.txt", header = FALSE, sep = ";"))
txt6 <- as.data.frame(txt6)
txt6$Unit <- "6"
txt7 <- t(
read.csv("./raw_data/BHS_Unit7.txt", header = FALSE, sep = ";"))
txt7 <- as.data.frame(txt7)
txt7$Unit <- "7"
txt8 <- t(
read.csv("./raw_data/BHS_Unit8.txt", header = FALSE, sep = ";"))
txt8 <- as.data.frame(txt8)
txt8$Unit <- "8"
txt9 <- t(
read.csv("./raw_data/BHS_Unit9.txt", header = FALSE, sep = ";"))
txt9 <- as.data.frame(txt9)
txt9$Unit <- "9"
txt10 <- t(
read.csv("./raw_data/BHS_Unit10.txt", header = FALSE, sep = ";"))
txt10 <- as.data.frame(txt10)
txt10$Unit <- "10"
txt11 <- t(
read.csv("./raw_data/BHS_Unit11.txt", header = FALSE, sep = ";"))
txt11 <- as.data.frame(txt11)
txt11$Unit <- "11"
cord_df <- rbind(txt1, txt2) %>%
rbind(., txt3) %>%
rbind(., txt4) %>%
rbind(., txt5) %>%
rbind(., txt6) %>%
rbind(., txt7) %>%
rbind(., txt8) %>%
rbind(., txt9) %>%
rbind(., txt10) %>%
rbind(., txt11)
rownames(cord_df) <- NULL # delete row names
colnames(cord_df) <- c("Coordinates", "Unit") # add name columns
cord_df <- cord_df %>% na.omit # delete empty rows
cord_df
cord_df <- separate(cord_df, "Coordinates", c("lat", "lon"), ",")
# convert from factor to numeric
cord_df$lat <- as.numeric(cord_df$lat)
cord_df$lon <- as.numeric(cord_df$lon)
cord_df$Unit <- as.numeric(cord_df$Unit)
cord_df
# make a list
cord_list <- split(cord_df, cord_df$Unit)
# extract lon-lats in the list, not the names
cord_list <- lapply(cord_list, function(x) { x["Unit"] <- NULL; x })
# create SpatialPolygons Object, convert coords to polygon
ps <- lapply(cord_list, Polygon)
# add Unit variable
p1 <- lapply(seq_along(ps), function(i) Polygons(list(ps[[i]]),
ID = names(cord_list)[i]  ))
# create spatial polygons
bhs_sp <- SpatialPolygons(p1, proj4string = CRS("+proj=utm +zone=11 +ellps=GRS80 +datum=NAD83 +units=m +no_defs") )
# create spatial polygon df
bhs_spdf <- SpatialPolygonsDataFrame(bhs_sp,
data.frame(Unit = unique(cord_df$Unit),
row.names = unique(cord_df$Unit)))
# convert to shapefile
bhs_sf <- st_as_sf(bhs_spdf, crs = "+proj=utm +zone=11 +ellps=GRS80 +datum=NAD83 +units=m +no_defs ")
txt1A <- t(
read.csv("./raw_data/BHS_Unit1A.txt", header = FALSE, sep = ";")) # transposed to long
txt1A_df <- as.data.frame(txt1A) # create dataframe
txt1A_df$Unit <- "1" # add Unit variable
txt4A <- t(
read.csv("./raw_data/BHS_Unit4A.txt", header = FALSE, sep = ";"))
txt4A_df <- as.data.frame(txt4A)
txt4A_df$Unit <- "4A"
txt4B <- t(
read.csv("./raw_data/BHS_Unit4B.txt", header = FALSE, sep = ";"))
txt4B_df <- as.data.frame(txt4B)
txt4B_df$Unit <- "4B"
txt4C <- t(
read.csv("./raw_data/BHS_Unit4C.txt", header = FALSE, sep = ";"))
txt4C_df <- as.data.frame(txt4C)
txt4C_df$Unit <- "4C"
crmv_df <- rbind(txt1A_df, txt4A_df) %>%
rbind(txt4B_df) %>%
rbind(txt4C_df)
rownames(crmv_df) <- NULL # delete row names
colnames(crmv_df) <- c("Coordinates", "Unit") # name columns
crmv_df <- crmv_df %>% na.omit # delete empty rows
# separate coordinates into two columns
crmv_df <- separate(crmv_df, "Coordinates", c("lat", "lon"), ",")
# convert to numeric
crmv_df$lat <- as.numeric(crmv_df$lat)
crmv_df$lon <- as.numeric(crmv_df$lon)
# make a list
crmv_list <- split(crmv_df, crmv_df$Unit)
# extract lon-lats in the list, not the names
crmv_list <- lapply(crmv_list, function(x) { x["Unit"] <- NULL; x })
# create SpatialPolygons Object, convert coords to polygon
rm_ps <- lapply(crmv_list, Polygon)
# add Unit variable
rm_p1 <- lapply(seq_along(rm_ps), function(i) Polygons(list(rm_ps[[i]]),
ID = names(crmv_list)[i]  ))
# convert to spatial polygons
rmbhs_sp <- SpatialPolygons(rm_p1, proj4string = CRS("+proj=utm +zone=11 +ellps=GRS80 +datum=NAD83 +units=m +no_defs") )
# create spatial polygons dataframe
rmbhs_spdf <- SpatialPolygonsDataFrame(rmbhs_sp,
data.frame(Unit = unique(crmv_df$Unit),
row.names = unique(crmv_df$Unit)))
# convert to spatial file
rmbhs_sf <- st_as_sf(rmbhs_spdf, crs = "+proj=utm +zone=11 +ellps=GRS80 +datum=NAD83 +units=m +no_defs ")
Unit1 <- filter(bhs_sf, Unit == 1) # Unit 1 polygon
Unit1A <- filter(rmbhs_sf, Unit == 1) # Unit 1 removed section polygon
# subtract polygons, grab relavent columns
Unit1_comp <- st_difference(Unit1, Unit1A) %>%
select(Unit, geometry)
# grab individual polygons
Unit4 <- filter(bhs_sf, Unit == 4)
Unit4A <- filter(rmbhs_sf, Unit == "4A")
Unit4B <- filter(rmbhs_sf, Unit == "4B")
Unit4C <- filter(rmbhs_sf, Unit == "4C")
# subtract removed sections, grab columns
Unit4_comp <- st_difference(Unit4, Unit4A) %>%
st_difference(Unit4B) %>%
st_difference(Unit4C) %>%
select(Unit, geometry)
# remove Unit 1 and 4 main polygons
bhs2_sf <- filter(bhs_sf, Unit != 1 & Unit != 4)
# add Units 1 and 4 with removed sections
bhsFinal_sf <- rbind(bhs2_sf, Unit1_comp) %>%
rbind(Unit4_comp)
`Bighorn Sheep Habitat` <- bhsFinal_sf # rename for legend title
mapview(`Bighorn Sheep Habitat`)
mapview(`Bighorn Sheep Habitat`)
txt1 <- t(
read.csv("./raw_data/BHS_Unit1.txt", header = FALSE, sep = ";"))
View(txt1)
txt1 <- read.csv("./raw_data/BHS_Unit1.txt", header = FALSE, sep = ";")
files <- list.files(path = "./raw_data/")
#files <- list.files(path = "./raw_data/")
files <- "BHS_Unit1.txt"
readdata <- function(x) {
x <- paste0("./raw_data",x)
critical <- read.csv(x, header = FALSE, sep = ";") %>%
t(.)
return(critical)
}
block.area.list <- pblapply(files, readdata)
library(pbapply)
block.area.list <- pblapply(files, readdata)
readdata <- function(x) {
x <- paste0("./raw_data/",x)
critical <- read.csv(x, header = FALSE, sep = ";") %>%
t(.)
return(critical)
}
block.area.list <- pblapply(files, readdata)
View(block.area.list)
files <- list.files(path = "./raw_data/")
readdata <- function(x) {
x <- paste0("./raw_data/",x)
critical <- read.csv(x, header = FALSE, sep = ";") %>%
t(.)
return(critical)
}
block.area.list <- pblapply(files, readdata)
block.area.list <- pblapply(files, readdata)
block.area <- do.call(rbind.data.frame, block.area.list)
View(block.area)
critical <- pblapply(files, readdata)
critical <- do.call(rbind.data.frame, critical)
readdata <- function(x) {
x <- paste0("./raw_data/",x)
critical <- read.csv(x, header = FALSE, sep = ";") %>%
t(.)
return(critical)
}
files <- list.files(path = "./raw_data/")
critical <- pblapply(files, readdata)
critical <- do.call(rbind.data.frame, critical)
View(critical)
View(critical)
readdata <- function(x) {
x <- paste0(x)
x2 <- paste0("./raw_data/",x)
critical <- read.csv(x2, header = FALSE, sep = ";") %>%
t(.)
critical$Unit <- x
return(critical)
}
critical <- pblapply(files, readdata)
critical <- do.call(rbind.data.frame, critical)
View(critical)
#files <- list.files(path = "./raw_data/")
files <- "BHS_Unit1.txt"
readdata <- function(x) {
x <- paste0(x)
x2 <- paste0("./raw_data/",x)
critical <- read.csv(x2, header = FALSE, sep = ";") %>%
t(.)
critical$Unit <- x
return(critical)
}
critical <- pblapply(files, readdata)
critical <- do.call(rbind.data.frame, critical)
View(critical)
readdata <- function(x) {
x <- paste0(x)
x2 <- paste0("./raw_data/",x)
critical <- read.csv(x2, header = FALSE, sep = ";") %>%
t() %>%
as.data.frame()
critical$Unit <- x
return(critical)
}
critical <- pblapply(files, readdata)
critical <- do.call(rbind.data.frame, critical)
View(critical)
files <- list.files(path = "./raw_data/")
#files <- "BHS_Unit1.txt"
readdata <- function(x) {
x <- paste0(x)
x2 <- paste0("./raw_data/",x)
critical <- read.csv(x2, header = FALSE, sep = ";") %>%
t() %>%
as.data.frame()
critical$Unit <- x
return(critical)
}
critical <- pblapply(files, readdata)
critical <- do.call(rbind.data.frame, critical)
View(critical)
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
